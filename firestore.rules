rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // === Règles pour l'authentification ===
    match /Auth/User/register/{userId} {
      // Un utilisateur peut seulement lire/écrire ses propres données
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Validation des données utilisateur
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.data.keys().hasAll(['Email', 'fullName', 'uid'])
        && request.resource.data.uid == userId
        && request.resource.data.Email == request.auth.token.email;
    }
    
    // === Règles pour les offres d'emploi ===
    match /allPost/{jobId} {
      // Lecture publique des offres (pour browsing)
      allow read: if request.auth != null;
      
      // Seuls les managers/admins peuvent créer/modifier des offres
      allow write: if request.auth != null 
        && exists(/databases/$(database)/documents/Auth/User/register/$(request.auth.uid))
        && get(/databases/$(database)/documents/Auth/User/register/$(request.auth.uid)).data.role in ['manager', 'admin'];
    }
    
    // === Règles pour les catégories d'emploi ===
    match /category/{categoryName}/{categoryDocument} {
      // Lecture publique pour navigation
      allow read: if request.auth != null;
      
      // Écriture limitée aux managers
      allow write: if request.auth != null 
        && exists(/databases/$(database)/documents/Auth/User/register/$(request.auth.uid))
        && get(/databases/$(database)/documents/Auth/User/register/$(request.auth.uid)).data.role in ['manager', 'admin'];
    }
    
    // === Règles pour les candidatures ===
    match /Apply/{userId} {
      // Un utilisateur peut seulement gérer ses propres candidatures
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Validation des candidatures
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.data.keys().hasAll(['userName', 'email', 'apply'])
        && request.resource.data.apply == true;
    }
    
    // === Règles pour les favoris/bookmarks ===
    match /BookMark/{userId}/BookMark1/{bookmarkId} {
      // Un utilisateur peut seulement gérer ses propres favoris
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // === Règles pour les chats/messages ===
    match /chatRoom/{chatId} {
      // Participants du chat peuvent lire/écrire
      allow read, write: if request.auth != null 
        && request.auth.uid in resource.data.participants;
    }
    
    match /chatRoom/{chatId}/messages/{messageId} {
      // Participants du chat peuvent lire/écrire les messages
      allow read, write: if request.auth != null 
        && request.auth.uid in get(/databases/$(database)/documents/chatRoom/$(chatId)).data.participants;
    }
    
    // === Règles pour les données publiques (lecture seule) ===
    match /publicData/{document} {
      // Données publiques lisibles par tous les utilisateurs connectés
      allow read: if request.auth != null;
      allow write: if false; // Pas d'écriture depuis l'app
    }
    
    // === Règles par défaut (restrictives) ===
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// === Règles pour Firebase Storage ===
service firebase.storage {
  match /b/{bucket}/o {
    
    // === CV et documents utilisateur ===
    match /cv/{userId}/{fileName} {
      // Un utilisateur peut seulement uploader/lire ses propres CV
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Validation des types de fichiers (PDF seulement)
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && resource.contentType == 'application/pdf'
        && resource.size < 10 * 1024 * 1024; // Max 10MB
    }
    
    // === Photos de profil ===
    match /profile_pictures/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Validation des images
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && resource.contentType.matches('image/.*')
        && resource.size < 5 * 1024 * 1024; // Max 5MB
    }
    
    // === Images d'entreprise (pour les managers) ===
    match /company_images/{userId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // === Règles par défaut ===
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}